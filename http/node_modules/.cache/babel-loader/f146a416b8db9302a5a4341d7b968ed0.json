{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useFetch = (requestConfig, dataProcessor) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method || 'GET',\n        body: JSON.stringify(requestConfig.body) || null,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      dataProcessor(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useFetch, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useFetch","requestConfig","dataProcessor","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message"],"sources":["C:/Users/Admin/Desktop/udemy/04-onwards-to-a-more-realistic-example/src/hooks/use-fetch.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useFetch = (requestConfig, dataProcessor) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(\r\n                requestConfig.url,\r\n                {\r\n                  method: requestConfig.method || 'GET',\r\n                  body: JSON.stringify(requestConfig.body) || null,\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                }\r\n              );\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Request failed!');\r\n          }\r\n    \r\n          const data = await response.json();\r\n    \r\n          dataProcessor(data)\r\n    \r\n        } catch (err) {\r\n          setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n      };\r\n\r\n      return {\r\n        isLoading,\r\n        error,\r\n        sendRequest\r\n      }\r\n\r\n}\r\n\r\nexport default useFetch;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,aAAD,EAAgBC,aAAhB,KAAkC;EAAA;;EAE/C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMQ,WAAW,GAAG,YAAY;IAC5BH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACxBR,aAAa,CAACS,GADU,EAExB;QACEC,MAAM,EAAEV,aAAa,CAACU,MAAd,IAAwB,KADlC;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,aAAa,CAACW,IAA7B,KAAsC,IAF9C;QAGEG,OAAO,EAAE;UACP,gBAAgB;QADT;MAHX,CAFwB,CAA5B;;MAWF,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MAEAjB,aAAa,CAACgB,IAAD,CAAb;IAED,CApBD,CAoBE,OAAOE,GAAP,EAAY;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDjB,YAAY,CAAC,KAAD,CAAZ;EACD,CA3BH;;EA6BE,OAAO;IACLD,SADK;IAELE,KAFK;IAGLE;EAHK,CAAP;AAML,CAxCD;;GAAMP,Q;;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}